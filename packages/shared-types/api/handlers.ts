// Code generated by tygo. DO NOT EDIT.

//////////
// source: auth.go

export interface AuthHandlers {
}
/**
 * LinkPubkeyRequest represents the request body for linking a pubkey
 */
export interface LinkPubkeyRequest {
  pubkey?: string;
}
/**
 * LinkPubkeyResponse represents the response for linking a pubkey
 */
export interface LinkPubkeyResponse {
  success: boolean;
  message: string;
  firebase_uid: string;
  pubkey: string;
  linked_at: string;
}
/**
 * UnlinkPubkeyRequest represents the request body for unlinking a pubkey
 */
export interface UnlinkPubkeyRequest {
  pubkey: string;
}
/**
 * UnlinkPubkeyResponse represents the response for unlinking a pubkey
 */
export interface UnlinkPubkeyResponse {
  success: boolean;
  message: string;
  pubkey: string;
}
/**
 * GetLinkedPubkeysResponse represents the response for getting linked pubkeys
 */
export interface GetLinkedPubkeysResponse {
  success: boolean;
  firebase_uid: string;
  linked_pubkeys: any /* models.LinkedPubkeyInfo */[];
}
/**
 * CheckPubkeyLinkRequest represents the request body for checking pubkey link status
 */
export interface CheckPubkeyLinkRequest {
  pubkey: string;
}
/**
 * CheckPubkeyLinkResponse represents the response for checking pubkey link status
 */
export interface CheckPubkeyLinkResponse {
  success: boolean;
  is_linked: boolean;
  firebase_uid?: string;
  pubkey: string;
  email?: string;
}

//////////
// source: auth_token_handler.go

/**
 * AuthTokenHandler handles token-based authentication operations
 */
export interface AuthTokenHandler {
}
/**
 * TokenResponse represents a generic token response
 */
export interface TokenResponse {
  success: boolean;
  data?: any /* models.FileUploadToken */;
  error?: string;
  message?: string;
}
/**
 * GenerateDeleteTokenRequest represents the request for delete token generation
 */
export interface GenerateDeleteTokenRequest {
  path: string;
  expiration: number /* int */; // Expiration in minutes
}
/**
 * ValidateTokenRequest represents the request for token validation
 */
export interface ValidateTokenRequest {
  token: string;
  path: string;
}
/**
 * RevokeTokenRequest represents the request for token revocation
 */
export interface RevokeTokenRequest {
  token: string;
}
/**
 * RevokeTokenResponse represents the response for token revocation
 */
export interface RevokeTokenResponse {
  success: boolean;
  error?: string;
  message?: string;
}
/**
 * ListActiveTokensResponse represents the response for active token listing
 */
export interface ListActiveTokensResponse {
  success: boolean;
  data?: any /* models.FileUploadToken */[];
  error?: string;
}
/**
 * RefreshTokenRequest represents the request for token refresh
 */
export interface RefreshTokenRequest {
  token: string;
  expiration: number /* int */; // New expiration in minutes
}

//////////
// source: development_handler.go

/**
 * DevelopmentHandler handles development utilities and debugging
 */
export interface DevelopmentHandler {
}
/**
 * DevResponse represents a generic development response
 */
export interface DevResponse {
  success: boolean;
  data?: any;
  error?: string;
  message?: string;
}
/**
 * GenerateTestFilesRequest represents the request for test file generation
 */
export interface GenerateTestFilesRequest {
  count: number /* int */;
}
/**
 * SimulateLoadRequest represents the request for load simulation
 */
export interface SimulateLoadRequest {
  duration: number /* int */; // duration in seconds
}

//////////
// source: file_server_handler.go

/**
 * FileServerHandler handles file server operations
 */
export interface FileServerHandler {
}
/**
 * UploadFileRequest represents the request for file upload
 */
export interface UploadFileRequest {
  Path: string;
  ContentType: string;
}
/**
 * UploadFileResponse represents the response for file upload
 */
export interface UploadFileResponse {
  success: boolean;
  data?: any /* models.FileMetadata */;
  error?: string;
}
/**
 * DownloadFileResponse represents the response for file download
 */
export interface DownloadFileResponse {
  success: boolean;
  error?: string;
}
/**
 * DeleteFileResponse represents the response for file deletion
 */
export interface DeleteFileResponse {
  success: boolean;
  error?: string;
  message?: string;
}
/**
 * GetStatusResponse represents the response for status check
 */
export interface GetStatusResponse {
  success: boolean;
  data?: { [key: string]: string};
  error?: string;
}
/**
 * ListFilesResponse represents the response for file listing
 */
export interface ListFilesResponse {
  success: boolean;
  data?: string[];
  error?: string;
}
/**
 * GenerateUploadTokenRequest represents the request for generating upload token
 */
export interface GenerateUploadTokenRequest {
  path: string;
  expiration: number /* int */; // Expiration in minutes
}
/**
 * GenerateUploadTokenResponse represents the response for upload token generation
 */
export interface GenerateUploadTokenResponse {
  success: boolean;
  data?: any /* models.FileUploadToken */;
  error?: string;
}

//////////
// source: heartbeat.go

export interface HeartbeatResponse {
  status: string;
}

//////////
// source: legacy_handler.go

export interface LegacyHandler {
}
/**
 * UserMetadataResponse represents the complete user metadata response
 */
export interface UserMetadataResponse {
  user?: any /* models.LegacyUser */;
  artists: any /* models.LegacyArtist */[];
  albums: any /* models.LegacyAlbum */[];
  tracks: any /* models.LegacyTrack */[];
}

//////////
// source: mock_storage_handler.go

/**
 * MockStorageHandler handles mock storage operations for development
 */
export interface MockStorageHandler {
}
/**
 * UploadFileRequest represents the request for mock storage file upload
 */
export interface MockUploadFileRequest {
  Bucket: string;
  Path: string;
  ContentType: string;
}
/**
 * UploadFileResponse represents the response for mock storage operations
 */
export interface MockStorageResponse {
  success: boolean;
  data?: any /* models.FileMetadata */;
  error?: string;
}
/**
 * DeleteFile handles mock storage file deletion
 */
export interface MockDeleteResponse {
  success: boolean;
  error?: string;
  message?: string;
}
/**
 * ListFilesResponse represents the response for mock storage file listing
 */
export interface MockListFilesResponse {
  success: boolean;
  data?: string[];
  error?: string;
}
/**
 * GetBucketInfoResponse represents the response for bucket information
 */
export interface GetBucketInfoResponse {
  success: boolean;
  data?: any /* models.BucketInfo */;
  error?: string;
}
/**
 * CreateBucketRequest represents the request for bucket creation
 */
export interface CreateBucketRequest {
  bucket: string;
  location: string;
}
/**
 * CreateBucketResponse represents the response for bucket creation
 */
export interface CreateBucketResponse {
  success: boolean;
  error?: string;
  message?: string;
}
/**
 * HealthCheckResponse represents the response for health check
 */
export interface MockHealthCheckResponse {
  success: boolean;
  status?: string;
  error?: string;
}

//////////
// source: responses.go

/**
 * APIResponse represents a standard API response
 */
export interface APIResponse {
  success: boolean;
  message?: string;
  data?: any;
  error?: string;
  timestamp: string;
}
/**
 * UserResponse represents a user response
 */
export interface UserResponse {
  user?: any /* models.User */;
}
/**
 * TracksResponse represents multiple tracks response
 */
export interface TracksResponse {
  tracks: any /* models.Track */[];
  total: number /* int */;
}
/**
 * CreateTrackRequest represents a request to create a track
 */
export interface CreateTrackRequest {
  title: string;
  artist: string;
  album: string;
  duration: number /* int */;
  audioUrl: string;
  artworkUrl: string;
  genre: string;
  priceMsat: number /* int64 */;
}

//////////
// source: tracks.go

export interface TracksHandler {
}
export interface CreateNostrTrackRequest {
  extension: string;
}
export interface CreateTrackResponse {
  success: boolean;
  data?: any /* models.NostrTrack */;
  error?: string;
  message?: string;
}
export interface GetTracksResponse {
  success: boolean;
  data?: (any /* models.NostrTrack */ | undefined)[];
  error?: string;
}

//////////
// source: webhook_handler.go

/**
 * WebhookHandler handles webhook operations from Cloud Functions
 */
export interface WebhookHandler {
}
/**
 * WebhookResponse represents a generic webhook response
 */
export interface WebhookResponse {
  success: boolean;
  data?: any;
  error?: string;
  message?: string;
}
