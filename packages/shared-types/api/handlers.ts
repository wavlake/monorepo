// Code generated by tygo. DO NOT EDIT.

//////////
// source: auth.go

export interface AuthHandlers {
}
/**
 * LinkPubkeyRequest represents the request body for linking a pubkey
 */
export interface LinkPubkeyRequest {
  pubkey?: string;
}
/**
 * LinkPubkeyResponse represents the response for linking a pubkey
 */
export interface LinkPubkeyResponse {
  success: boolean;
  message: string;
  firebase_uid: string;
  pubkey: string;
  linked_at: string;
}
/**
 * UnlinkPubkeyRequest represents the request body for unlinking a pubkey
 */
export interface UnlinkPubkeyRequest {
  pubkey: string;
}
/**
 * UnlinkPubkeyResponse represents the response for unlinking a pubkey
 */
export interface UnlinkPubkeyResponse {
  success: boolean;
  message: string;
  pubkey: string;
}
/**
 * GetLinkedPubkeysResponse represents the response for getting linked pubkeys
 */
export interface GetLinkedPubkeysResponse {
  success: boolean;
  firebase_uid: string;
  linked_pubkeys: any /* models.LinkedPubkeyInfo */[];
}
/**
 * CheckPubkeyLinkRequest represents the request body for checking pubkey link status
 */
export interface CheckPubkeyLinkRequest {
  pubkey: string;
}
/**
 * CheckPubkeyLinkResponse represents the response for checking pubkey link status
 */
export interface CheckPubkeyLinkResponse {
  success: boolean;
  is_linked: boolean;
  firebase_uid?: string;
  pubkey: string;
  email?: string;
}

//////////
// source: heartbeat.go

export interface HeartbeatResponse {
  status: string;
}

//////////
// source: legacy_handler.go

export interface LegacyHandler {
}
/**
 * UserMetadataResponse represents the complete user metadata response
 */
export interface UserMetadataResponse {
  user?: any /* models.LegacyUser */;
  artists: any /* models.LegacyArtist */[];
  albums: any /* models.LegacyAlbum */[];
  tracks: any /* models.LegacyTrack */[];
}

//////////
// source: responses.go

/**
 * APIResponse represents a standard API response
 */
export interface APIResponse {
  success: boolean;
  message?: string;
  data?: any;
  error?: string;
  timestamp: string;
}
/**
 * UserResponse represents a user response
 */
export interface UserResponse {
  user?: any /* models.User */;
}
/**
 * TracksResponse represents multiple tracks response
 */
export interface TracksResponse {
  tracks: any /* models.Track */[];
  total: number /* int */;
}
/**
 * CreateTrackRequest represents a request to create a track
 */
export interface CreateTrackRequest {
  title: string;
  artist: string;
  album: string;
  duration: number /* int */;
  audioUrl: string;
  artworkUrl: string;
  genre: string;
  priceMsat: number /* int64 */;
}

//////////
// source: tracks.go

export interface TracksHandler {
}
export interface CreateNostrTrackRequest {
  extension: string;
}
export interface CreateTrackResponse {
  success: boolean;
  data?: any /* models.NostrTrack */;
  error?: string;
  message?: string;
}
export interface GetTracksResponse {
  success: boolean;
  data?: (any /* models.NostrTrack */ | undefined)[];
  error?: string;
}
